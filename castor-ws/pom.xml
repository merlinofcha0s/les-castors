<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>fr.castor.app</groupId>
        <artifactId>castor-module</artifactId>
        <version>1.1.1-SNAPSHOT</version>
    </parent>

    <artifactId>castor-ws</artifactId>
    <name>castor-ws</name>
    <description>Projet qui porte la logique metier et le webservice</description>
    <packaging>war</packaging>

    <properties>
        <hibernate.version>4.3.7.Final</hibernate.version>
        <quartz.version>2.2.1</quartz.version>

        <!-- Propriétés de la BDD pour les tests -->
        <database.address>127.0.0.1</database.address>
        <database.name>batimen_test</database.name>
        <datasource.url>jdbc:postgresql://${database.address}:5432/${database.name}</datasource.url>
        <database.login>postgres</database.login>
        <database.password>123456</database.password>

        <!-- Logs -->
        <logs.address>c:/logs/log-batimen/dev</logs.address>
        <logs.archives>${logs.address}/archived</logs.archives>
        <logs.lvl>DEBUG</logs.lvl>

        <!-- Logs pour les tests -->
        <logs.test.address>c:/logs/log-batimen/test</logs.test.address>
        <logs.test.archives>${logs.test.address}/archived</logs.test.archives>
        <logs.test.lvl>DEBUG</logs.test.lvl>

        <!-- Config Hibernate -->
        <jdbc.jndi>java:jboss/CastorPG</jdbc.jndi>
        <hibernate.show_sql>true</hibernate.show_sql>
        <hibernate.format_sql>true</hibernate.format_sql>
        <hibernate.use_sql_comments>true</hibernate.use_sql_comments>
        <hibernate.generate_statistics>true</hibernate.generate_statistics>

        <!-- Config Arquillian -->
        <jboss.home>D:\dev\wildfly-8.2.1.Final</jboss.home>

        <!-- Email -->
        <mandrill.api.key>OOBiT-ollMvq7_JaMjyDOQ</mandrill.api.key>
        <email.active>true</email.active>
        <email.confirmation.by.team>true</email.confirmation.by.team>
        <email.box.team>contactlescastors@gmail.com</email.box.team>

        <!-- URL du frontend -->
        <url.frontend.web>https://127.0.0.1:8181/castor-web/</url.frontend.web>

        <!-- Cloudinary MGT -->
        <prop.temp.img.dir>D:/dev/temp/</prop.temp.img.dir>
        <prop.image.cloudinary.cloud_name>lescastors</prop.image.cloudinary.cloud_name>
        <prop.image.cloudinary.api_key>445898463279963</prop.image.cloudinary.api_key>
        <prop.image.cloudinary.api_secret>av_FudaoLvP0Oz5VPqspL8_WPpA</prop.image.cloudinary.api_secret>
        <prop.image.is.test>true</prop.image.is.test>
        <app.temp.img.dir.test>D:/dev/temp/img/</app.temp.img.dir.test>
    </properties>

    <build>
        <plugins>
            <!-- Conf eclipse M2e -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
            </plugin>
            <!-- Génération du war -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <warName>${project.artifactId}</warName>
                    <failOnMissingWebXml>true</failOnMissingWebXml>
                    <webResources>
                        <resource>
                            <directory>${basedir}/src/main/webapp/WEB-INF</directory>
                            <filtering>true</filtering>
                            <targetPath>WEB-INF</targetPath>
                            <includes>
                                <include>**/*.xml</include>
                            </includes>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
            <!-- Pour les tests unitaires (Junit) -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18.1</version>
                <configuration>
                    <skipTests>false</skipTests>
                    <testFailureIgnore>true</testFailureIgnore>
                    <argLine>${surefireArgLine}</argLine>
                    <disableXmlReport>false</disableXmlReport>
                    <trimStackTrace>false</trimStackTrace>
                    <reportFormat>plain</reportFormat>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <configuration>
                    <destFile>${sonar.jacoco.reportPath}</destFile>
                    <dataFile>${sonar.jacoco.reportPath}</dataFile>
                </configuration>
                <executions>
                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Execute .sql avant les tests -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sql-maven-plugin</artifactId>
                <version>1.5</version>
                <dependencies>
                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>9.3-1102-jdbc41</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <driver>org.postgresql.Driver</driver>
                    <url>${datasource.url}</url>
                    <username>${database.login}</username>
                    <password>${database.password}</password>
                    <skip>${maven.test.skip}</skip>
                    <autocommit>true</autocommit>
                    <delimiterType>row</delimiterType>
                    <orderFile>ascending</orderFile>
                    <encoding>utf-8</encoding>
                </configuration>
                <executions>
                    <execution>
                        <id>drop-schema-before-unit-test</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <sqlCommand>DROP SCHEMA IF EXISTS public CASCADE;</sqlCommand>
                            <onError>continue</onError>
                        </configuration>
                    </execution>
                    <execution>
                        <id>inject-v1.0-before-unit-test</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <fileset>
                                <basedir>${basedir}</basedir>
                                <includes>
                                    <include>src/main/sql/v1.0/*.sql</include>
                                    <include>src/test/sql/v1.0/*.sql</include>
                                </includes>
                            </fileset>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Essayer de retablir quand changement de version d'hibernate -->
            <plugin>
                <groupId>org.hibernate.orm.tooling</groupId>
                <artifactId>hibernate-enhance-maven-plugin</artifactId>
                <version>${hibernate.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>enhance</goal>
                        </goals>
                        <configuration>
                            <failOnError>true</failOnError>
                            <enableLazyInitialization>true</enableLazyInitialization>
                            <enableDirtyTracking>true</enableDirtyTracking>
                            <enableAssociationManagement>true</enableAssociationManagement>
                            <enableFieldAccessEnhancement>true</enableFieldAccessEnhancement>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <!--   Yes, you really must have an explicit dependency on the thing you
                         want to enhance -->
                    <dependency>
                        <groupId>${project.groupId}</groupId>
                        <artifactId>castor-ws</artifactId>
                        <version>${project.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources/dev</directory>
                <includes>
                    <include>**</include>
                </includes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <filtering>true</filtering>
                <directory>src/test/resources</directory>
                <includes>
                    <include>**</include>
                </includes>
            </testResource>
        </testResources>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.jboss.spec</groupId>
            <artifactId>jboss-javaee-7.0</artifactId>
            <version>${java.spec.version}</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jaxrs</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-client</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-multipart-provider</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.4</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-jpamodelgen</artifactId>
            <version>${hibernate.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate.version}</version>
            <scope>compile</scope>
        </dependency>

        <!-- Object mapping -->
        <dependency>
            <groupId>org.modelmapper</groupId>
            <artifactId>modelmapper</artifactId>
            <scope>compile</scope>
        </dependency>

        <!-- Email -->
        <dependency>
            <groupId>com.mandrillapp.wrapper.lutung</groupId>
            <artifactId>lutung</artifactId>
            <version>0.0.5</version>
            <scope>compile</scope>
        </dependency>

        <!-- Photo cloud service -->
        <dependency>
            <groupId>com.cloudinary</groupId>
            <artifactId>cloudinary-http42</artifactId>
            <version>1.2.0</version>
            <scope>compile</scope>
        </dependency>

        <!-- Security -->
        <dependency>
            <groupId>com.lambdaworks</groupId>
            <artifactId>scrypt</artifactId>
            <scope>compile</scope>
        </dependency>

        <!-- Scheduling -->
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>${quartz.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz-jobs</artifactId>
            <version>${quartz.version}</version>
            <scope>compile</scope>
        </dependency>


        <!-- Log -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-access</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
            <scope>compile</scope>
        </dependency>
        <!-- Dependence intra projet -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>castor-dto</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>castor-core</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>

        <!-- Test Arquillian -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-jacoco</artifactId>
            <version>1.0.0.Alpha8</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>org.jacoco.core</artifactId>
            <version>${jacoco.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly</groupId>
            <artifactId>wildfly-arquillian-container-managed</artifactId>
            <version>8.2.1.Final</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-persistence-impl</artifactId>
            <version>1.0.0.Alpha6</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>castor-client</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>jackson-jaxrs</artifactId>
                    <groupId>org.codehaus.jackson</groupId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>xalan</groupId>
                <artifactId>xalan</artifactId>
                <version>2.7.1</version>
            </dependency>
            <!-- Test arquillian -->
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>1.1.8.Final</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.jboss.shrinkwrap.resolver</groupId>
                <artifactId>shrinkwrap-resolver-bom</artifactId>
                <version>2.1.1</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>integration</id>
            <properties>
                <!-- BDD pour les tests -->
                <database.address>127.0.0.1</database.address>
                <database.name>batimen_test</database.name>
                <database.login>postgres</database.login>
                <database.password>0tgtIDKFaB</database.password>

                <!-- Logs -->
                <logs.address>/usr/share/log-batimen</logs.address>
                <logs.archives>${logs.address}/archived</logs.archives>
                <logs.lvl>DEBUG</logs.lvl>

                <!-- Logs pour les tests -->
                <logs.test.address>/usr/share/log-test-batimen</logs.test.address>
                <logs.test.archives>${logs.test.address}/archived</logs.test.archives>
                <logs.test.lvl>DEBUG</logs.test.lvl>

                <!-- Hibernate -->
                <hibernate.show_sql>false</hibernate.show_sql>
                <hibernate.format_sql>false</hibernate.format_sql>
                <hibernate.use_sql_comments>false</hibernate.use_sql_comments>
                <hibernate.generate_statistics>false</hibernate.generate_statistics>

                <!-- Config Arquillian -->
                <jboss.home>/opt/wildfly</jboss.home>
                <!-- Email -->
                <mandrill.api.key>AqM7U8jIxFR7GURuupcsIA</mandrill.api.key>
                <!-- <mandrill.api.key>OOBiT-ollMvq7_JaMjyDOQ</mandrill.api.key> -->
                <email.active>true</email.active>
                <email.confirmation.by.team>true</email.confirmation.by.team>
                <email.box.team>contactlescastors@gmail.com</email.box.team>

                <!-- URL du frontend -->
                <url.frontend.web>https://integration.lescastors.fr/batimen-web/</url.frontend.web>

                <!-- Gestion des images -->
                <prop.temp.img.dir>/usr/share/castor-temp/img/</prop.temp.img.dir>
                <prop.image.is.test>false</prop.image.is.test>

                <!-- Gestion des images pour les tests -->
                <app.temp.img.dir.test>/usr/share/castor-temp/img-test/</app.temp.img.dir.test>
            </properties>
            <build>
                <resources>
                    <resource>
                        <filtering>true</filtering>
                        <directory>src/main/resources/integration</directory>
                        <includes>
                            <include>**</include>
                        </includes>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-maven-plugin</artifactId>
                        <configuration>
                            <jboss-home>/opt/wildfly</jboss-home>
                            <username>raiden</username>
                            <password>fDJ.oE$r[h</password>
                            <filename>${project.artifactId}.war</filename>
                            <artifactId>${project.artifactId}</artifactId>
                        </configuration>
                        <executions>
                            <execution>
                                <id>deploy-ws-on-wildfly</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>deploy</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco.version}</version>
                        <configuration>
                            <destFile>${sonar.jacoco.reportPath}</destFile>
                            <dataFile>${sonar.jacoco.reportPath}</dataFile>
                            <append>true</append>
                        </configuration>
                        <executions>
                            <execution>
                                <id>pre-unit-test</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>report</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>production</id>
            <properties>
                <jdbc.jndi>java:jboss/datasources/PostgreSQLDS</jdbc.jndi>
                <maven.test.skip>true</maven.test.skip>

                <!-- Logs -->
                <logs.address>${OPENSHIFT_LOG_DIR}</logs.address>
                <logs.archives>${OPENSHIFT_LOG_DIR}/archived</logs.archives>
                <logs.lvl>DEBUG</logs.lvl>

                <!-- Hibernate -->
                <hibernate.show_sql>false</hibernate.show_sql>
                <hibernate.format_sql>false</hibernate.format_sql>
                <hibernate.use_sql_comments>false</hibernate.use_sql_comments>
                <hibernate.generate_statistics>false</hibernate.generate_statistics>

                <!-- Email -->
                <mandrill.api.key>AqM7U8jIxFR7GURuupcsIA</mandrill.api.key>
                <!-- <mandrill.api.key>OOBiT-ollMvq7_JaMjyDOQ</mandrill.api.key> -->
                <email.active>true</email.active>
                <email.confirmation.by.team>true</email.confirmation.by.team>
                <email.box.team>contactlescastors@gmail.com</email.box.team>

                <!-- URL du frontend -->
                <url.frontend.web>https://lescastors.fr/</url.frontend.web>

                <!-- Gestion des images -->
                <prop.temp.img.dir>${OPENSHIFT_DATA_DIR}</prop.temp.img.dir>
                <prop.image.is.test>false</prop.image.is.test>

                <!-- Gestion des images pour les tests -->
                <app.temp.img.dir.test>${OPENSHIFT_DATA_DIR}/img-test/</app.temp.img.dir.test>
            </properties>
            <build>
                <resources>
                    <resource>
                        <filtering>true</filtering>
                        <directory>src/main/resources/prod</directory>
                        <includes>
                            <include>**</include>
                        </includes>
                        <excludes>
                            <exclude>openshift/**/*</exclude>
                        </excludes>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>2.6</version>
                        <configuration>
                            <warName>ROOT</warName>
                            <failOnMissingWebXml>true</failOnMissingWebXml>
                            <webResources>
                                <resource>
                                    <directory>${basedir}/src/main/webapp/WEB-INF</directory>
                                    <filtering>true</filtering>
                                    <targetPath>WEB-INF</targetPath>
                                    <includes>
                                        <include>**/*.xml</include>
                                    </includes>
                                </resource>
                            </webResources>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>


    <repositories>
        <repository>
            <id>Nexus JBoss</id>
            <url>https://repository.jboss.org/nexus/content/repositories/</url>
        </repository>
        <repository>
            <id>java.net</id>
            <url>http://download.java.net/maven/</url>
        </repository>
        <repository>
            <id>Apache Nexus</id>
            <url>https://repository.apache.org/content/repositories/snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
</project>
