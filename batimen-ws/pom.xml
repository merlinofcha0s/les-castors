<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>fr.batimen.app</groupId>
		<artifactId>batimen-module</artifactId>
		<version>0.1.0-SNAPSHOT</version>
		<relativePath>../batimen-module</relativePath>
	</parent>

	<groupId>fr.batimen.app</groupId>
	<artifactId>batimen-ws</artifactId>
	<name>batimen-ws</name>
	<description>Projet qui porte la logique metier et le webservice</description>
	<packaging>war</packaging>

	<properties>
		<jersey.version>1.17</jersey.version>
		<hibernate.version>4.2.5.Final</hibernate.version>

		<!-- Propriétés de la BDD pour les tests -->
		<database.address>127.0.0.1</database.address>
		<database.name>batimen_test</database.name>
		<datasource.url>jdbc:postgresql://${database.address}:5432/${database.name}</datasource.url>
		<database.login>postgres</database.login>
		<database.password>123456</database.password>

		<!-- Logs -->
		<logs.address>c:/logs/log-batimen/dev</logs.address>
		<logs.archives>${logs.address}/archived</logs.archives>
		<logs.lvl>DEBUG</logs.lvl>

		<!-- Logs pour les tests -->
		<logs.test.address>c:/logs/log-batimen/test</logs.test.address>
		<logs.test.archives>${logs.test.address}/archived</logs.test.archives>
		<logs.test.lvl>DEBUG</logs.test.lvl>

		<!-- Config Hibernate -->
		<hibernate.show_sql>true</hibernate.show_sql>
		<hibernate.format_sql>true</hibernate.format_sql>
		<hibernate.use_sql_comments>true</hibernate.use_sql_comments>

		<!-- Config Arquillian -->
		<glassfish.location>D:\dev\glassfish3wp</glassfish.location>
		<glassfish.adminHost>localhost</glassfish.adminHost>
		<glassfish.adminPort>4848</glassfish.adminPort>
		<glassfish.adminHttps>false</glassfish.adminHttps>
		<glassfish.adminUser></glassfish.adminUser>
		<glassfish.adminPassword></glassfish.adminPassword>
		<glassfish.domain>domain1</glassfish.domain>
		<glassfish.debug>false</glassfish.debug>
	</properties>

	<issueManagement>
		<system>Redmine</system>
		<url>${redmine.address}</url>
	</issueManagement>
	<ciManagement>
		<system>Jenkins</system>
		<url>${jenkins.address}</url>
	</ciManagement>
	<scm>
		<connection>${git.repository}</connection>
		<developerConnection>${git.repository}</developerConnection>
		<url>${redmine.depot.address}</url>
	</scm>

	<build>
		<plugins>
			<!-- Javadoc -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
			</plugin>
			<!-- Conf eclipse M2e -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
			</plugin>
			<!-- Génération du war -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<warName>${project.artifactId}</warName>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<webResources>
						<resource>
							<directory>${basedir}/src/main/webapp/WEB-INF</directory>
							<filtering>true</filtering>
							<targetPath>WEB-INF</targetPath>
							<includes>
								<include>**/*.xml</include>
							</includes>
						</resource>
						<!-- <resource> <directory>${basedir}/src/main/resources/META-INF</directory> 
							<filtering>true</filtering> <targetPath>META-INF</targetPath> <includes> 
							<include>**/*.xml</include> </includes> </resource> -->
					</webResources>
				</configuration>
			</plugin>
			<!-- Pour les tests unitaires (Junit) -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.16</version>
				<configuration>
					<skipTests>false</skipTests>
					<testFailureIgnore>true</testFailureIgnore>
					<argLine>${jacoco.agent.argLine}</argLine>
					<disableXmlReport>false</disableXmlReport>
					<trimStackTrace>false</trimStackTrace>
					<reportFormat>plain</reportFormat>
				</configuration>
			</plugin>

			<!-- Execute .sql avant les tests -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.5</version>
				<dependencies>
					<dependency>
						<groupId>postgresql</groupId>
						<artifactId>postgresql</artifactId>
						<version>9.1-901.jdbc4</version>
					</dependency>
				</dependencies>
				<configuration>
					<driver>org.postgresql.Driver</driver>
					<url>${datasource.url}</url>
					<username>${database.login}</username>
					<password>${database.password}</password>
					<skip>${maven.test.skip}</skip>
					<autocommit>true</autocommit>
					<delimiterType>row</delimiterType>
					<orderFile>ascending</orderFile>
					<encoding>utf-8</encoding>
				</configuration>
				<executions>
					<execution>
						<id>drop-schema-before-unit-test</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<sqlCommand>DROP SCHEMA IF EXISTS public CASCADE;</sqlCommand>
							<onError>continue</onError>
						</configuration>
					</execution>
					<execution>
						<id>inject-v1.0-before-unit-test</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<fileset>
								<basedir>${basedir}</basedir>
								<includes>
									<include>src/main/sql/v1.0/*.sql</include>
									<include>src/test/sql/v1.0/*.sql</include>
								</includes>
							</fileset>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<filtering>true</filtering>
				<directory>src/test/resources</directory>
				<includes>
					<include>**</include>
				</includes>
			</testResource>
		</testResources>
	</build>

	<dependencies>
		<!-- Code -->
		<dependency>
			<groupId>org.jboss.spec</groupId>
			<artifactId>jboss-javaee-6.0</artifactId>
			<scope>provided</scope>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-servlet</artifactId>
			<scope>compile</scope>
		</dependency>
		<!-- Scope Compile car sinon glassfish ne voit pas les providers -->
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-json</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-jpamodelgen</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<scope>compile</scope>
		</dependency>

		<!-- Object mapping -->
		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<scope>compile</scope>
		</dependency>

		<!-- Security -->
		<dependency>
			<groupId>com.lambdaworks</groupId>
			<artifactId>scrypt</artifactId>
			<scope>compile</scope>
		</dependency>

		<!-- Log -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-access</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Dependence intra projet -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>batimen-dto</artifactId>
			<version>0.1.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>batimen-core</artifactId>
			<version>0.1.0-SNAPSHOT</version>
		</dependency>

		<!-- Test Arquillian -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.container</groupId>
			<artifactId>arquillian-glassfish-managed-3.1</artifactId>
			<version>1.0.0.CR4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish.main.extras</groupId>
			<artifactId>glassfish-embedded-all</artifactId>
			<version>3.1.2.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.shrinkwrap.resolver</groupId>
			<artifactId>shrinkwrap-resolver-impl-maven</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.extension</groupId>
			<artifactId>arquillian-persistence-impl</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>batimen-client</artifactId>
			<version>0.1.0-SNAPSHOT</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.jboss.spec</groupId>
				<artifactId>jboss-javaee-6.0</artifactId>
				<type>pom</type>
				<version>3.0.2.Final</version>
			</dependency>
			<dependency>
				<groupId>com.sun.jersey</groupId>
				<artifactId>jersey-server</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sun.jersey</groupId>
				<artifactId>jersey-servlet</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sun.jersey</groupId>
				<artifactId>jersey-json</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${hibernate.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-jpamodelgen</artifactId>
				<version>1.3.0.Final</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${hibernate.version}</version>
			</dependency>
			<dependency>
				<groupId>org.modelmapper</groupId>
				<artifactId>modelmapper</artifactId>
				<version>0.6.1</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-access</artifactId>
				<version>${logback.version}</version>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.11</version>
			</dependency>
			<dependency>
				<groupId>de.akquinet.jbosscc</groupId>
				<artifactId>jbosscc-needle</artifactId>
				<version>2.2</version>
			</dependency>
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>3.2</version>
			</dependency>
			<dependency>
				<groupId>postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>9.1-901.jdbc4</version>
			</dependency>
			<dependency>
				<groupId>xalan</groupId>
				<artifactId>xalan</artifactId>
				<version>2.7.1</version>
			</dependency>
			<dependency>
				<groupId>com.lambdaworks</groupId>
				<artifactId>scrypt</artifactId>
				<version>1.4.0</version>
			</dependency>
			<!-- Test arquillian -->
			<dependency>
				<groupId>org.jboss.arquillian</groupId>
				<artifactId>arquillian-bom</artifactId>
				<version>1.1.3.Final</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.jboss.shrinkwrap.resolver</groupId>
				<artifactId>shrinkwrap-resolver-bom</artifactId>
				<version>2.0.2</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.jboss.arquillian.extension</groupId>
				<artifactId>arquillian-persistence-impl</artifactId>
				<version>1.0.0.Alpha6</version>
			</dependency>
			<dependency>
				<groupId>com.sun.jersey</groupId>
				<artifactId>jersey-bundle</artifactId>
				<version>1.17</version>
			</dependency>
			<dependency>
				<groupId>com.sun.jersey.contribs</groupId>
				<artifactId>jersey-multipart</artifactId>
				<version>1.17</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<profiles>
		<profile>
			<id>integration</id>
			<properties>
				<!-- BDD pour les tests -->
				<database.address>127.0.0.1</database.address>
				<database.name>batimen_test</database.name>
				<database.login>raiden</database.login>
				<database.password>M0ntaleign3</database.password>

				<!-- Logs -->
				<logs.address>/usr/share/log-batimen</logs.address>
				<logs.archives>${logs.address}/archived</logs.archives>
				<logs.lvl>WARN</logs.lvl>

				<!-- Logs pour les tests -->
				<logs.test.address>/usr/share/log-test-batimen</logs.test.address>
				<logs.test.archives>${logs.test.address}/archived</logs.test.archives>
				<logs.test.lvl>DEBUG</logs.test.lvl>

				<!-- Hibernate -->
				<hibernate.show_sql>false</hibernate.show_sql>
				<hibernate.format_sql>false</hibernate.format_sql>
				<hibernate.use_sql_comments>false</hibernate.use_sql_comments>

				<!-- Config Arquillian -->
				<glassfish.location>/usr/share/glassfish3</glassfish.location>
				<glassfish.adminHost>127.0.0.1</glassfish.adminHost>
				<glassfish.adminPort>4949</glassfish.adminPort>
				<glassfish.adminHttps>false</glassfish.adminHttps>
				<glassfish.adminUser>admin</glassfish.adminUser>
				<glassfish.adminPassword>OIOIUenoBueno</glassfish.adminPassword>
				<glassfish.domain>batimendomain</glassfish.domain>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.glassfish.maven.plugin</groupId>
						<artifactId>maven-glassfish-plugin</artifactId>
						<version>2.1</version>
						<configuration>
							<user>admin</user>
							<adminPassword>OIOIUenoBueno</adminPassword>
							<glassfishDirectory>/usr/share/glassfish3</glassfishDirectory>
							<components>
								<component>
									<name>${project.artifactId}</name>
									<artifact>${project.build.directory}/${project.artifactId}.war</artifact>
								</component>
							</components>
							<domain>
								<name>batimendomain</name>
								<adminPort>4949</adminPort>
								<httpPort>6060</httpPort>
								<httpsPort>6161</httpsPort>
							</domain>
						</configuration>
						<executions>
							<execution>
								<id>deploy-ws</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>redeploy</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!--  <plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>0.6.3.201306030806</version>
						<configuration>
							<propertyName>jacoco.agent.argLine</propertyName>
							<destFile>${sonar.jacoco.reportPath}</destFile>
							<dataFile>${sonar.jacoco.reportPath}</dataFile>
						</configuration>
						<executions>
							<execution>
								<id>agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
						</executions>
					</plugin> -->
				</plugins>
			</build>
		</profile>
		<profile>
			<id>glassfish-managed-debug</id>
			<properties>
				<glassfish.debug>true</glassfish.debug>
			</properties>
		</profile>
	</profiles>


	<repositories>
		<repository>
			<id>Nexus JBoss</id>
			<url>https://repository.jboss.org/nexus/content/repositories/</url>
		</repository>
		<repository>
			<id>java.net</id>
			<url>http://download.java.net/maven/</url>
		</repository>
		<repository>
			<id>Apache Nexus</id>
			<url>https://repository.apache.org/content/repositories/snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
</project>
